- name: Hello World
  difficulty: 0
  parts:
  - |
     package main
     import "fmt"
     
     // Returns "Hello World", as is customary in first examples
     func solve() string {
        return ""
     }
  tests:
  - input:
    output:
    - '"Hello World"'
- name: Simple math
  difficulty: 1
  parts:
  - |
     package main
     import "fmt"
     
     // Returns the sum of all of all three parameters
     func solve(a, b, c int) int {
        return 0
     }
  tests:
  - input:
    - 1, 2, 7
    output:
    - 10
  - input:
    - 4, 5, 6
    output:
    - 15
- name: Ifs
  difficulty: 1
  help: http://golangtutorials.blogspot.com/2011/06/control-structures-if-else-statement.html
  hint: If a is greater than b, return a. Else return b.
  parts:
  - |
     package main
     import "fmt"
     
     // Returns the larger of the two parameters 'a' and 'b'
     func solve(a, b int) int {
        return 0
     }
  tests:
  - input:
    - 1, 2
    output:
    - 2
  - input:
    - 6, 6
    output:
    - 6
  - input:
    - 1, 1
    output:
    - 1
- name: Average math
  difficulty: 1
  help: 'http://golang.org/ref/spec#Operator_precedence'
  hint: Remember to use parenthesis to ensure order of operation!
  parts:
  - |
     package main
     import "fmt"
     
     // Returns the average of all of all three parameters
     func solve(a, b, c int) int {
        return 0
     }
  tests:
  - input:
    - 1, 2, 6
    output:
    - 3
  - input:
    - 4, 5, 6
    output:
    - 5
- name: More ifs
  difficulty: 2
  help: http://golangtutorials.blogspot.com/2011/06/control-structures-if-else-statement.html
  parts:
  - |
     package main
     import "fmt"
     
     // If a is 0, return the sum of b and c
     // If a is 1, return the product of b and c
     // Otherwise, return -1
     func solve(a, b, c int) int {
        return 0
     }
  tests:
  - input:
    - 0, 1, 5
    output:
    - 6
  - input:
    - 0, 5, -9
    output:
    - -4
  - input:
    - 1, 5, 5
    output:
    - 25
  - input:
    - 1, 9, 10
    output:
    - 90
  - input:
    - -1, 5, 6
    output:
    - -1
  - input:
    - 42, 77, 10
    output:
    - -1
     
     
     
     